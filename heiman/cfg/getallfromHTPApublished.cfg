#!/usr/bin/env python
PACKAGE = "heiman"
import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("temperatura_mean", double_t, 0, "Media de la temperatura", 32, -100, 200)
gen.add("temperatura_stddev", double_t, 0, "Desviacion estandar de la temperatura", 2, 0, 10)
gen.add("lower_temp_limit", double_t, 0, "Limite inferior de la temperatura (en Celsius)", 25, -100, 200)
gen.add("upper_temp_limit", double_t, 0, "Limite superior de la temperatura (en Celsius)", 45, -100, 200)
gen.add("zoom_temp", int_t, 0, "Zoom de la imagen de temperaturas", 20, 1, 100)
gen.add("threshold_temp", int_t, 0, "Threshold de las temperaturas (en Celsius)", 32, -100, 200)
gen.add("min_size_temp", int_t, 0, "Tamanyo minimo del blob de las temperaturas", 2000, 1, 1000000)
gen.add("max_size_temp", int_t, 0, "Tamanyo maximo del blob de las temperaturas", 1000000, 1, 1000000)
gen.add("lower_evidence_limit", double_t, 0, "Limite inferior de la evidencia (entre 0 y 1)", 0.5, 0, 1)
gen.add("upper_evidence_limit", double_t, 0, "Limite superior de la evidencia (entre 0 y 1)", 0.5, 0, 1)
gen.add("zoom_evidence", int_t, 0, "Zoom de la imagen de evidencias", 20, 1, 100)
gen.add("threshold_evidence", double_t, 0, "Threshold de las evidencias (entre 0 y 1)", 0.5, 0, 1)
gen.add("min_size_evidence", int_t, 0, "Tamanyo minimo del blob de las evidencias", 2000, 1, 1000000)	
gen.add("max_size_evidence", int_t, 0, "Tamanyo maximo del blob de las evidencias", 1000000, 1, 1000000)

exit(gen.generate(PACKAGE, "heiman", "getallfromHTPApublished"))
